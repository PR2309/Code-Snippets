{
	"Custom C Programmin Boilerplate": {
		"prefix": "c-self",
		"body": [
			"#include <stdio.h>      // Standard I/O functions: printf, scanf, etc.",
			"#include <stdlib.h>     // General utilities: malloc, free, atoi, rand, etc.",
			"#include <string.h>     // String manipulation: strcpy, strlen, strcmp, etc.",
			"#include <math.h>       // Mathematical functions: sin, cos, sqrt, pow, etc.",
			"#include <time.h>       // Date and time utilities: time, localtime, strftime, etc.",
			"#include <ctype.h>      // Character classification: isalpha, isdigit, tolower, etc.",
			"#include <stdbool.h>    // Boolean type (true, false) in C99 and later.",
			"#include <assert.h>     // Debugging: assert macro for runtime checks.",
			"#include <limits.h>     // Integer type limits: INT_MAX, INT_MIN, etc.",
			"#include <float.h>      // Floating-point limits: FLT_MAX, DBL_MIN, etc.",
			"#include <errno.h>      // Error handling: errno variable for system call errors.",
			"#include <signal.h>     // Signal handling: raise, kill, signal.",
			"#include <stdarg.h>     // Variable arguments: va_start, va_arg, va_end.",
			"#include <stddef.h>     // Standard definitions: NULL, size_t, ptrdiff_t, etc.",
			"#include <stdint.h>     // Fixed-width integer types: int8_t, uint16_t, etc.",
			"#include <inttypes.h>   // Formatted I/O for integers: PRIu64, SCNd32, etc.",
			"#include <complex.h>    // Complex numbers (C99): cabs, cexp, creal, cimag.",
			"#include <tgmath.h>     // Type-generic math functions (C99).",
			"#include <wchar.h>      // Wide-character functions: wprintf, wcslen, etc.",
			"#include <wctype.h>     // Wide-character classification: iswalpha, iswdigit, etc.",
			"#include <locale.h>     // Localization: setlocale, localeconv.",
			"",
			"// Optional (C11 and later)",
			"// #include <stdalign.h>   // Memory alignment (C11).",
			"// #include <stdatomic.h>  // Atomic operations (C11).",
			"// #include <stdnoreturn.h> // noreturn function specifier (C11).",
			"// #include <threads.h>    // Thread support (C11).",
			"// #include <uchar.h>      // Unicode character handling (C11).",
			"// #include <fenv.h>       // Floating-point environment handling.",
			"",
			"int main() {",
			"    ${1:// Your code here}",
			"    return 0;",
			"}",
			"",
			"${2:// // Optional Info:",
			"// int main(int argc, char **argv) {",
			"//     /*  ",
			"//         main function will take either none (0) or 2 paramenters: argc and argv",
			"//         argc -> Number of command-line arguments (including the program name) ",
			"//                 In Java, it's similar to `args.length`.",
			"//                     argc=argv.length; // (in Java)",
			"//                 In C, `argc` is automatically set by the OS.",
			"//                     argc=sizeof(argv)/sizeof(argv[0]); // (in C)",
			"//         argv -> Array of command-line arguments",
			"//                 each argument is a string",
			"//         argv[0] -> The name or path of the executable file",
			"//         argv[1] -> Undefined if no command line argument is passed, and returns null",
			"//     */",
			"//     printf(\"%d\\n%s\\n\", argc, argv[0]);",
			"//     return 0;",
			"// }",
		],
		"description": "Custom C Programming Boilerplate with more headers and documentation"
	}
}
